<?php

namespace iMobile\Bundle\DataBundle\Command;

use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Security\Core\Authentication\Token\UsernamePasswordToken;
use FOS\UserBundle\Model\User;

use iMobile\Bundle\DataBundle\Command\BaseCommand;

class SendCredentialsCommand extends BaseCommand
{
    /**
     * @see Command
     */
    protected function configure()
    {
        parent::configure();
        $this
            ->setName('vihuvac:user:send-credentials')
            ->addArgument('username', InputArgument::REQUIRED, 'The username')
            ->addArgument('password', InputArgument::OPTIONAL, 'The password (autogenerated if is blank)');
    }

    /**
     * @see Command
     */
    protected function mainProcess(InputInterface $input, OutputInterface $output)
    {
        $doctrine = $this->getContainer()->get('doctrine');
        $em = $doctrine->getEntityManager();
        $um = $this->getContainer()->get('fos_user.user_manager');
        $username = $input->getArgument('username');
        $password = $input->getArgument('password');

        $user = $doctrine->getRepository('DataBundle:User')->findOneByUsername($username);
        if (!$user) {
            throw new \Exception("User - {$username} can't be found");
            return;
        }
        $user->setPlainPassword($password);
        $um->updatePassword($user);
        $um->updateUser($user);

        $this->sendCredentials($user, $password);

        $output->writeln('<info>Sent credentials for: ' . $user->getUsername() . '</info>');
    }

    public static function generateRandomPassword()
    {
        $n = rand(10e16, 10e20);
        return base_convert($n, 10, 36);
    }

    protected function sendCredentials($user, $password)
    {
        $twig = $this->getContainer()->get('twig');

        $message = \Swift_Message::newInstance()
        ->setSubject('Your credentials for Vihuvac Website')
        ->setFrom('noreply-vihuvac.app@gmail.com')
        ->setTo($user->getEmail())
        ->setBody(
            $twig->render(
                'DataBundle:Email:credentials.txt.twig',
                array('user' => $user, 'password' => $password)
            )
        );
        $this->getContainer()->get('mailer')->send($message);
    }

    /**
     * @see Command
     */
    protected function interact(InputInterface $input, OutputInterface $output)
    {
        parent::interact($input, $output);
        if (!$input->getArgument('username')) {
            $username = $this->getHelper('dialog')->askAndValidate(
                $output,
                'Please type a username:',
                function ($username) {
                    return $username;
                }
            );
            $input->setArgument('username', $username);
        }
        if (!$input->getArgument('password')) {
            $password = $this->getHelper('dialog')->askAndValidate(
                $output,
                'Please enter new password (leave in blank to autogenerate):',
                function ($password) {
                    if (!$password) {
                        $password = SendCredentialsCommand::generateRandomPassword();
                    }

                    return $password;
                }
            );
            $input->setArgument('password', $password);
        }
    }
}